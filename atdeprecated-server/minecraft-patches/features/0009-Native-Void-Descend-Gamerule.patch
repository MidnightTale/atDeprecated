From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MidnightTale <midnighttale24@gmail.com>
Date: Mon, 21 Jul 2025 17:02:07 +0700
Subject: [PATCH] Native Void Descend Gamerule

As part of: Descend (https://github.com/MidnightTale/Descend/blob/26dc4dca932e7315fca5fed22ae4aa01ae765803/src/main/java/fun/mntale/descend/Descend.java)

diff --git a/net/minecraft/world/entity/LivingEntity.java b/net/minecraft/world/entity/LivingEntity.java
index d55a6989fd68f0bcf7bd05e9420fda1115afa6c0..c9722df404a6df65fa2f42a7eee50f5cf0775667 100644
--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -2734,8 +2734,60 @@ public abstract class LivingEntity extends Entity implements Attackable, Waypoin
 
     @Override
     protected void onBelowWorld() {
-        this.hurt(this.damageSources().fellOutOfWorld(), this.level().getWorld().getVoidDamageAmount()); // Paper - use configured void damage amount
+        // atDeprecated start
+        if (!this.voidDescendIfEnabled()) {
+            this.hurt(this.damageSources().fellOutOfWorld(), ((ServerLevel) this.level()).getWorld().getVoidDamageAmount());
+        }
+        // atDeprecated end
+    }
+
+    // atDeprecated start
+    /**
+     * Custom void descend logic, called from onBelowWorld().
+     * Returns true if custom logic handled the event, false to fall back to vanilla.
+     */
+    public boolean voidDescendIfEnabled() {
+        ServerLevel level = (ServerLevel) this.level();
+        if (!level.getGameRules().getBoolean(net.minecraft.world.level.GameRules.VOID_DESCEND_ENABLED)) {
+            return false;
+        }
+        double x = this.getX();
+        double z = this.getZ();
+        ServerLevel targetWorld = level;
+        double targetY;
+        ResourceKey<Level> dim = level.dimension();
+        if (dim == net.minecraft.world.level.Level.OVERWORLD) {
+            targetY = 320;
+        } else if (dim == net.minecraft.world.level.Level.NETHER) {
+            targetY = 128;
+        } else if (dim == net.minecraft.world.level.Level.END) {
+            targetWorld = level.getServer().overworld();
+            targetY = 640;
+        } else {
+            targetY = 320;
+        }
+        level.sendParticles(net.minecraft.core.particles.ParticleTypes.PORTAL, x, this.getY(), z, 100, 1, 1, 1, 0.1);
+        level.playSound(null, x, this.getY(), z, net.minecraft.sounds.SoundEvents.PORTAL_TRIGGER, net.minecraft.sounds.SoundSource.BLOCKS, 0.5f, 0.7f);
+        final ServerLevel finalTargetWorld = targetWorld;
+        final double finalTargetY = targetY;
+        this.teleportAsync(
+                finalTargetWorld,
+                new net.minecraft.world.phys.Vec3(x, finalTargetY, z),
+                this.getYRot(),
+                this.getXRot(),
+                this.getDeltaMovement(),
+                org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.PLUGIN,
+                Entity.TELEPORT_FLAG_LOAD_CHUNK | Entity.TELEPORT_FLAG_TELEPORT_PASSENGERS,
+                (entity) -> {
+                    finalTargetWorld.sendParticles(net.minecraft.core.particles.ParticleTypes.PORTAL, x, finalTargetY, z, 100, 1, 1, 1, 0.1);
+                    finalTargetWorld.playSound(null, x, finalTargetY, z, net.minecraft.sounds.SoundEvents.PORTAL_TRIGGER, net.minecraft.sounds.SoundSource.BLOCKS, 0.3f, 0.4f);
+                    this.addEffect(new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.SLOW_FALLING, 10 * 20, 0, true, true, true));
+                    this.addEffect(new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.BLINDNESS, 7 * 20, 0, true, true, true));
+                }
+        );
+        return true;
     }
+    // atDeprecated end
 
     protected void updateSwingTime() {
         if (!this.swinging && this.swingTime == 0) return; // Leaf - Lithium - entity.fast_hand_swing
diff --git a/net/minecraft/world/level/GameRules.java b/net/minecraft/world/level/GameRules.java
index a6277c587f9e3bdae3b00d2862dea7f4c06253bd..1c1e39b7cdf9c05503192101c5aff9547eda2232 100644
--- a/net/minecraft/world/level/GameRules.java
+++ b/net/minecraft/world/level/GameRules.java
@@ -262,6 +262,9 @@ public class GameRules {
     public static final GameRules.Key<GameRules.IntegerValue> RULE_DEATH_XP_DROP_PERCENTAGE = register(
         "deathXpDropPercentage", GameRules.Category.PLAYER, GameRules.IntegerValue.create(70, 0, 100, FeatureFlagSet.of(), (server, value) -> {})
     );
+    public static final GameRules.Key<GameRules.BooleanValue> VOID_DESCEND_ENABLED = register(
+            "voidDescendEnabled", GameRules.Category.PLAYER, GameRules.BooleanValue.create(true)
+    );
     // atDeprecated end
     private final Map<GameRules.Key<?>, GameRules.Value<?>> rules;
     private final FeatureFlagSet enabledFeatures;
