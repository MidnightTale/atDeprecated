From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MidnightTale <midnighttale24@gmail.com>
Date: Sat, 19 Jul 2025 20:56:27 +0700
Subject: [PATCH] Always sync boat minecart position


diff --git a/net/minecraft/world/entity/EntityType.java b/net/minecraft/world/entity/EntityType.java
index 6f00ffa05d9597917574357e0069c9b056aa5ce2..1a5f89e587eb91165bf32c9ecaa2e4e99031e451 100644
--- a/net/minecraft/world/entity/EntityType.java
+++ b/net/minecraft/world/entity/EntityType.java
@@ -192,6 +192,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> ACACIA_CHEST_BOAT = register(
         "acacia_chest_boat",
@@ -200,6 +203,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Allay> ALLAY = register(
         "allay",
@@ -239,6 +245,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync raft position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Raft> BAMBOO_RAFT = register(
         "bamboo_raft",
@@ -247,6 +256,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync raft position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Bat> BAT = register(
         "bat", EntityType.Builder.of(Bat::new, MobCategory.AMBIENT).sized(0.5F, 0.9F).eyeHeight(0.45F).clientTrackingRange(5)
@@ -261,6 +273,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> BIRCH_CHEST_BOAT = register(
         "birch_chest_boat",
@@ -269,6 +284,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Blaze> BLAZE = register(
         "blaze", EntityType.Builder.of(Blaze::new, MobCategory.MONSTER).fireImmune().sized(0.6F, 1.8F).clientTrackingRange(8)
@@ -308,6 +326,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> CHERRY_CHEST_BOAT = register(
         "cherry_chest_boat",
@@ -316,10 +337,20 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<MinecartChest> CHEST_MINECART = register(
         "chest_minecart",
-        EntityType.Builder.of(MinecartChest::new, MobCategory.MISC).noLootTable().sized(0.98F, 0.7F).passengerAttachments(0.1875F).clientTrackingRange(8)
+        EntityType.Builder.of(MinecartChest::new, MobCategory.MISC)
+            .noLootTable()
+            .sized(0.98F, 0.7F)
+            .passengerAttachments(0.1875F)
+            .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Chicken> CHICKEN = register(
         "chicken",
@@ -339,6 +370,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(0.98F, 0.7F)
             .passengerAttachments(0.1875F)
             .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Cow> COW = register(
         "cow", EntityType.Builder.of(Cow::new, MobCategory.CREATURE).sized(0.9F, 1.4F).eyeHeight(1.3F).passengerAttachments(1.36875F).clientTrackingRange(10)
@@ -356,6 +390,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> DARK_OAK_CHEST_BOAT = register(
         "dark_oak_chest_boat",
@@ -364,6 +401,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Dolphin> DOLPHIN = register(
         "dolphin", EntityType.Builder.of(Dolphin::new, MobCategory.WATER_CREATURE).sized(0.9F, 0.6F).eyeHeight(0.3F)
@@ -488,7 +528,14 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     );
     public static final EntityType<MinecartFurnace> FURNACE_MINECART = register(
         "furnace_minecart",
-        EntityType.Builder.of(MinecartFurnace::new, MobCategory.MISC).noLootTable().sized(0.98F, 0.7F).passengerAttachments(0.1875F).clientTrackingRange(8)
+        EntityType.Builder.of(MinecartFurnace::new, MobCategory.MISC)
+            .noLootTable()
+            .sized(0.98F, 0.7F)
+            .passengerAttachments(0.1875F)
+            .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Ghast> GHAST = register(
         "ghast",
@@ -536,7 +583,14 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     );
     public static final EntityType<MinecartHopper> HOPPER_MINECART = register(
         "hopper_minecart",
-        EntityType.Builder.of(MinecartHopper::new, MobCategory.MISC).noLootTable().sized(0.98F, 0.7F).passengerAttachments(0.1875F).clientTrackingRange(8)
+        EntityType.Builder.of(MinecartHopper::new, MobCategory.MISC)
+            .noLootTable()
+            .sized(0.98F, 0.7F)
+            .passengerAttachments(0.1875F)
+            .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Horse> HORSE = register(
         "horse",
@@ -590,6 +644,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> JUNGLE_CHEST_BOAT = register(
         "jungle_chest_boat",
@@ -598,6 +655,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<LeashFenceKnotEntity> LEASH_KNOT = register(
         "leash_knot",
@@ -646,6 +706,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> MANGROVE_CHEST_BOAT = register(
         "mangrove_chest_boat",
@@ -654,13 +717,23 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Marker> MARKER = register(
         "marker", EntityType.Builder.of(Marker::new, MobCategory.MISC).noLootTable().sized(0.0F, 0.0F).clientTrackingRange(0)
     );
     public static final EntityType<Minecart> MINECART = register(
         "minecart",
-        EntityType.Builder.of(Minecart::new, MobCategory.MISC).noLootTable().sized(0.98F, 0.7F).passengerAttachments(0.1875F).clientTrackingRange(8)
+        EntityType.Builder.of(Minecart::new, MobCategory.MISC)
+            .noLootTable()
+            .sized(0.98F, 0.7F)
+            .passengerAttachments(0.1875F)
+            .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<MushroomCow> MOOSHROOM = register(
         "mooshroom",
@@ -677,6 +750,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> OAK_CHEST_BOAT = register(
         "oak_chest_boat",
@@ -685,6 +761,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Ocelot> OCELOT = register(
         "ocelot", EntityType.Builder.of(Ocelot::new, MobCategory.CREATURE).sized(0.6F, 0.7F).passengerAttachments(0.6375F).clientTrackingRange(10)
@@ -707,6 +786,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> PALE_OAK_CHEST_BOAT = register(
         "pale_oak_chest_boat",
@@ -715,6 +797,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Panda> PANDA = register(
         "panda", EntityType.Builder.of(Panda::new, MobCategory.CREATURE).sized(1.3F, 1.25F).clientTrackingRange(10)
@@ -855,7 +940,14 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     );
     public static final EntityType<MinecartSpawner> SPAWNER_MINECART = register(
         "spawner_minecart",
-        EntityType.Builder.of(MinecartSpawner::new, MobCategory.MISC).noLootTable().sized(0.98F, 0.7F).passengerAttachments(0.1875F).clientTrackingRange(8)
+        EntityType.Builder.of(MinecartSpawner::new, MobCategory.MISC)
+            .noLootTable()
+            .sized(0.98F, 0.7F)
+            .passengerAttachments(0.1875F)
+            .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<SpectralArrow> SPECTRAL_ARROW = register(
         "spectral_arrow",
@@ -877,6 +969,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<ChestBoat> SPRUCE_CHEST_BOAT = register(
         "spruce_chest_boat",
@@ -885,6 +980,9 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             .sized(1.375F, 0.5625F)
             .eyeHeight(0.5625F)
             .clientTrackingRange(10)
+            // atDeprecated start - Always sync boat position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<Squid> SQUID = register(
         "squid", EntityType.Builder.of(Squid::new, MobCategory.WATER_CREATURE).sized(0.8F, 0.8F).eyeHeight(0.4F).clientTrackingRange(8)
@@ -920,7 +1018,14 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     );
     public static final EntityType<MinecartTNT> TNT_MINECART = register(
         "tnt_minecart",
-        EntityType.Builder.of(MinecartTNT::new, MobCategory.MISC).noLootTable().sized(0.98F, 0.7F).passengerAttachments(0.1875F).clientTrackingRange(8)
+        EntityType.Builder.of(MinecartTNT::new, MobCategory.MISC)
+            .noLootTable()
+            .sized(0.98F, 0.7F)
+            .passengerAttachments(0.1875F)
+            .clientTrackingRange(8)
+            // atDeprecated start - Always sync minecart position every tick
+            .updateInterval(1)
+            // atDeprecated end
     );
     public static final EntityType<TraderLlama> TRADER_LLAMA = register(
         "trader_llama",
