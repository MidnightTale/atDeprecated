name: atDeprecated CI - master

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    environment: default
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '22'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure Git User Details
        run: git config --global user.email "ci@mntale.fun" && git config --global user.name "atDeprecated CI"

      - name: Apply Patches
        run: ./gradlew applyAllPatches

      - name: CreateJar
        run: ./gradlew createMojmapPaperclipJar

      - name: Upload Artifact
        uses: "actions/upload-artifact@v4"
        with:
          name: "${{ env.project_id_b }} CI Artifacts"
          path: "atdeprecated-server/build/libs/*-paperclip-*-mojmap.jar"

      - name: Grant execute permission for SetENV
        run: chmod +x scripts/SetENV.sh

      - name: SetENV
        if: github.event_name != 'pull_request'
        run: sh scripts/SetENV.sh

      - name: Create Release
        if: github.event_name != 'pull_request'
        uses: ncipollo/release-action@v1.16.0
        with:
          tag: ${{ env.tag }}
          name: ${{ env.project_id_b }} ${{ env.mcversion }} - ${{ env.commit_id }}
          body: |
            ðŸ“¦Version: `${{ env.mcversion }}`@${{ env.commit_id }} [![download](https://img.shields.io/github/downloads/MidnightTale/${{ env.project_id }}/${{ env.tag }}/total?color=red&style=flat-square)](https://github.com/MidnightTale/${{ env.project_id }}/releases/download/${{ env.tag }}/${{ env.jar }})
            This release is automatically compiled by GitHub Actions
            ### Commit history
            ${{ env.commit_msg }}
          artifacts: |
            ${{ env.jar_dir }}
          generateReleaseNotes: true
          prerelease: ${{ env.pre }}
          makeLatest: ${{ env.make_latest }}
          token: "${{ secrets.GITHUB_TOKEN }}"